import streamlit as st
from card_news.section_analytics import SectionAnalytics
import plotly.express as px
import pandas as pd

def create_analytics_dashboard():
    """ÎèÖÎ¶ΩÏ†ÅÏù∏ Î∂ÑÏÑù ÎåÄÏãúÎ≥¥Îìú"""
    
    st.set_page_config(page_title="Ïπ¥ÎìúÎâ¥Ïä§ Î∂ÑÏÑù ÎåÄÏãúÎ≥¥Îìú", layout="wide")
    
    analytics = SectionAnalytics()
    
    # 1. Ïã§ÏãúÍ∞Ñ Î©îÌä∏Î¶≠
    st.header("üìä Ïã§ÏãúÍ∞Ñ Î∂ÑÏÑù ÎåÄÏãúÎ≥¥Îìú")
    
    col1, col2, col3, col4 = st.columns(4)
    
    # Î©îÌä∏Î¶≠ Ïπ¥Îìú
    with col1:
        st.metric(
            "Ïò§Îäò ÏÉùÏÑ±Îêú Ïπ¥ÎìúÎâ¥Ïä§", 
            "12Í∞ú",
            "+3 vs Ïñ¥Ï†ú"
        )
    
    with col2:
        st.metric(
            "ÌèâÍ∑† Ï†ïÌôïÎèÑ",
            "78%",
            "+5%"
        )
    
    # 2. ÏÑπÏÖò ÏÑ±Îä• ÌûàÌä∏Îßµ
    st.subheader("üî• ÏÑπÏÖò ÏÑ±Îä• ÌûàÌä∏Îßµ")
    
    # ÏãúÍ∞ÑÎåÄÎ≥Ñ ÏÑπÏÖò ÏÇ¨Ïö© Ìå®ÌÑ¥
    patterns = analytics.get_temporal_patterns('hourly')
    df = pd.DataFrame(patterns).T.fillna(0)
    
    fig = px.imshow(df, 
                    labels=dict(x="ÏÑπÏÖò", y="ÏãúÍ∞ÑÎåÄ", color="ÏÇ¨Ïö© ÌöüÏàò"),
                    aspect="auto")
    st.plotly_chart(fig, use_container_width=True)
    
    # 3. A/B ÌÖåÏä§Ìä∏ Í≤∞Í≥º
    st.subheader("üß™ A/B ÌÖåÏä§Ìä∏")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.info("**Í∏∞Ï°¥ Ìä∏Î¶¨Í±∞**: 'ÌîÑÎ°úÏÑ∏Ïä§', 'Ï†àÏ∞®'")
        st.metric("ÌèâÍ∑† Ï†êÏàò", "4.2", "-1.3")
        
    with col2:
        st.success("**ÏÉà Ìä∏Î¶¨Í±∞**: 'Îã®Í≥ÑÎ≥Ñ', 'Ïã§ÌñâÍ≥ÑÌöç'")
        st.metric("ÌèâÍ∑† Ï†êÏàò", "7.8", "+3.6")
    
    # 4. Ïã§ÏãúÍ∞Ñ ÌîºÎìúÎ∞±
    st.subheader("üí¨ Ïã§ÏãúÍ∞Ñ ÌîºÎìúÎ∞±")
    
    # ÏµúÍ∑º ÏÉùÏÑ±Îêú Ïπ¥ÎìúÎâ¥Ïä§Ïùò ÏÑπÏÖò Ï†êÏàò
    data = analytics.load_data()
    recent = data['selections'][-5:]  # ÏµúÍ∑º 5Í∞ú
    
    for selection in recent:
        with st.expander(f"Í∏∞ÏÇ¨ {selection['article_id']} - {selection['timestamp'][:10]}"):
            for section, score in selection['scores'].items():
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.text(section)
                with col2:
                    if score >= 8:
                        st.success(f"{score}Ï†ê")
                    elif score >= 6:
                        st.warning(f"{score}Ï†ê")
                    else:
                        st.error(f"{score}Ï†ê")

if __name__ == "__main__":
    create_analytics_dashboard()
